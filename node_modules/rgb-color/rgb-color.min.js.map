{"version":3,"file":"rgb-color.min.js","sources":["../src/named-colors.js","../src/color-defs.js","../src/rgb-color.js"],"sourcesContent":["const namedColors = {\n  aliceblue: 'f0f8ff',\n  antiquewhite: 'faebd7',\n  aqua: '00ffff',\n  aquamarine: '7fffd4',\n  azure: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '000000',\n  blanchedalmond: 'ffebcd',\n  blue: '0000ff',\n  blueviolet: '8a2be2',\n  brown: 'a52a2a',\n  burlywood: 'deb887',\n  cadetblue: '5f9ea0',\n  chartreuse: '7fff00',\n  chocolate: 'd2691e',\n  coral: 'ff7f50',\n  cornflowerblue: '6495ed',\n  cornsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: '00ffff',\n  darkblue: '00008b',\n  darkcyan: '008b8b',\n  darkgoldenrod: 'b8860b',\n  darkgray: 'a9a9a9',\n  darkgreen: '006400',\n  darkkhaki: 'bdb76b',\n  darkmagenta: '8b008b',\n  darkolivegreen: '556b2f',\n  darkorange: 'ff8c00',\n  darkorchid: '9932cc',\n  darkred: '8b0000',\n  darksalmon: 'e9967a',\n  darkseagreen: '8fbc8f',\n  darkslateblue: '483d8b',\n  darkslategray: '2f4f4f',\n  darkturquoise: '00ced1',\n  darkviolet: '9400d3',\n  deeppink: 'ff1493',\n  deepskyblue: '00bfff',\n  dimgray: '696969',\n  dodgerblue: '1e90ff',\n  feldspar: 'd19275',\n  firebrick: 'b22222',\n  floralwhite: 'fffaf0',\n  forestgreen: '228b22',\n  fuchsia: 'ff00ff',\n  gainsboro: 'dcdcdc',\n  ghostwhite: 'f8f8ff',\n  gold: 'ffd700',\n  goldenrod: 'daa520',\n  gray: '808080',\n  green: '008000',\n  greenyellow: 'adff2f',\n  honeydew: 'f0fff0',\n  hotpink: 'ff69b4',\n  indianred: 'cd5c5c',\n  indigo: '4b0082',\n  ivory: 'fffff0',\n  khaki: 'f0e68c',\n  lavender: 'e6e6fa',\n  lavenderblush: 'fff0f5',\n  lawngreen: '7cfc00',\n  lemonchiffon: 'fffacd',\n  lightblue: 'add8e6',\n  lightcoral: 'f08080',\n  lightcyan: 'e0ffff',\n  lightgoldenrodyellow: 'fafad2',\n  lightgrey: 'd3d3d3',\n  lightgreen: '90ee90',\n  lightpink: 'ffb6c1',\n  lightsalmon: 'ffa07a',\n  lightseagreen: '20b2aa',\n  lightskyblue: '87cefa',\n  lightslateblue: '8470ff',\n  lightslategray: '778899',\n  lightsteelblue: 'b0c4de',\n  lightyellow: 'ffffe0',\n  lime: '00ff00',\n  limegreen: '32cd32',\n  linen: 'faf0e6',\n  magenta: 'ff00ff',\n  maroon: '800000',\n  mediumaquamarine: '66cdaa',\n  mediumblue: '0000cd',\n  mediumorchid: 'ba55d3',\n  mediumpurple: '9370d8',\n  mediumseagreen: '3cb371',\n  mediumslateblue: '7b68ee',\n  mediumspringgreen: '00fa9a',\n  mediumturquoise: '48d1cc',\n  mediumvioletred: 'c71585',\n  midnightblue: '191970',\n  mintcream: 'f5fffa',\n  mistyrose: 'ffe4e1',\n  moccasin: 'ffe4b5',\n  navajowhite: 'ffdead',\n  navy: '000080',\n  oldlace: 'fdf5e6',\n  olive: '808000',\n  olivedrab: '6b8e23',\n  orange: 'ffa500',\n  orangered: 'ff4500',\n  orchid: 'da70d6',\n  palegoldenrod: 'eee8aa',\n  palegreen: '98fb98',\n  paleturquoise: 'afeeee',\n  palevioletred: 'd87093',\n  papayawhip: 'ffefd5',\n  peachpuff: 'ffdab9',\n  peru: 'cd853f',\n  pink: 'ffc0cb',\n  plum: 'dda0dd',\n  powderblue: 'b0e0e6',\n  purple: '800080',\n  red: 'ff0000',\n  rosybrown: 'bc8f8f',\n  royalblue: '4169e1',\n  saddlebrown: '8b4513',\n  salmon: 'fa8072',\n  sandybrown: 'f4a460',\n  seagreen: '2e8b57',\n  seashell: 'fff5ee',\n  sienna: 'a0522d',\n  silver: 'c0c0c0',\n  skyblue: '87ceeb',\n  slateblue: '6a5acd',\n  slategray: '708090',\n  snow: 'fffafa',\n  springgreen: '00ff7f',\n  steelblue: '4682b4',\n  tan: 'd2b48c',\n  teal: '008080',\n  thistle: 'd8bfd8',\n  tomato: 'ff6347',\n  turquoise: '40e0d0',\n  violet: 'ee82ee',\n  violetred: 'd02090',\n  wheat: 'f5deb3',\n  white: 'ffffff',\n  whitesmoke: 'f5f5f5',\n  yellow: 'ffff00',\n  yellowgreen: '9acd32',\n};\n\nexport default namedColors;\n","const colorDefs = [\n  {\n    re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n    example: ['rgb(123, 234, 45)', 'rgb(255,234,245)'],\n    process(bits) {\n      return [\n        parseInt(bits[1], 10),\n        parseInt(bits[2], 10),\n        parseInt(bits[3], 10),\n      ];\n    },\n  },\n  {\n    re: /^(\\w{2})(\\w{2})(\\w{2})$/,\n    example: ['#00ff00', '336699'],\n    process(bits) {\n      return [\n        parseInt(bits[1], 16),\n        parseInt(bits[2], 16),\n        parseInt(bits[3], 16),\n      ];\n    },\n  },\n  {\n    re: /^(\\w{1})(\\w{1})(\\w{1})$/,\n    example: ['#fb0', 'f0f'],\n    process(bits) {\n      return [\n        parseInt(bits[1] + bits[1], 16),\n        parseInt(bits[2] + bits[2], 16),\n        parseInt(bits[3] + bits[3], 16),\n      ];\n    },\n  },\n];\n\nexport default colorDefs;\n","import namedColors from './named-colors';\nimport colorDefs from './color-defs';\n\n/**\n * RGBColor\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\nclass RGBColor {\n  constructor(color) {\n    let colorString = color;\n    this.ok = false;\n\n    // just accept strings\n    if (!(typeof colorString === 'string')) {\n      return;\n    }\n\n    // strip any leading #\n    if (colorString.charAt(0) === '#') { // remove # if any\n      colorString = colorString.substr(1, 6);\n    }\n\n    colorString = colorString.replace(/ /g, '').toLowerCase();\n\n    // before getting into regexps, try simple matches\n    // and overwrite the input\n    if (Object.prototype.hasOwnProperty.call(namedColors, colorString)) {\n      ({ [colorString]: colorString } = namedColors);\n    }\n    // emd of simple type-in colors\n\n    // search through the definitions to find a match\n    for (let i = 0; i < colorDefs.length; i += 1) {\n      const def = colorDefs[i];\n      const bits = def.re.exec(colorString);\n      if (bits) {\n        ([this.r, this.g, this.b] = def.process(bits));\n        this.ok = true;\n      }\n    }\n\n    // validate/cleanup values\n    if (this.r < 0 || Number.isNaN(this.r) || this.r === undefined) {\n      this.r = 0;\n    } else if (this.r > 255) {\n      this.r = 255;\n    }\n    if (this.g < 0 || Number.isNaN(this.g) || this.g === undefined) {\n      this.g = 0;\n    } else if (this.g > 255) {\n      this.g = 255;\n    }\n    if (this.b < 0 || Number.isNaN(this.b) || this.b === undefined) {\n      this.b = 0;\n    } else if (this.b > 255) {\n      this.b = 255;\n    }\n  }\n\n  isValid() {\n    return this.ok;\n  }\n\n  rgb() {\n    return `rgb(${this.r}, ${this.g}, ${this.b})`;\n  }\n\n  hex() {\n    let r = this.r.toString(16);\n    let g = this.g.toString(16);\n    let b = this.b.toString(16);\n    if (r.length === 1) r = `0${r}`;\n    if (g.length === 1) g = `0${g}`;\n    if (b.length === 1) b = `0${b}`;\n    return `#${r}${g}${b}`;\n  }\n\n  channels() {\n    return { r: this.r, g: this.g, b: this.b };\n  }\n}\n\nexport default function rgbcolor(color) {\n  return new RGBColor(color);\n}\n"],"names":["namedColors","colorDefs","bits","parseInt","RGBColor","color","colorString","ok","charAt","substr","replace","toLowerCase","Object","prototype","hasOwnProperty","call","i","length","def","re","exec","process","r","g","b","this","Number","isNaN","undefined","toString"],"mappings":"oLAAA,IAAMA,aACO,sBACG,cACR,oBACM,eACL,eACA,gBACC,eACD,wBACS,cACV,oBACM,eACL,mBACI,mBACA,oBACC,mBACD,eACJ,wBACS,kBACN,iBACD,cACH,kBACI,kBACA,uBACK,kBACL,mBACC,mBACA,qBACE,wBACG,oBACJ,oBACA,iBACH,oBACG,sBACE,uBACC,uBACA,uBACA,oBACH,kBACF,qBACG,iBACJ,oBACG,kBACF,mBACC,qBACE,qBACA,iBACJ,mBACE,oBACC,cACN,mBACK,cACL,eACC,qBACM,kBACH,iBACD,mBACE,gBACH,eACD,eACA,kBACG,uBACK,mBACJ,sBACG,mBACH,oBACC,mBACD,8BACW,mBACX,oBACC,mBACD,qBACE,uBACE,sBACD,wBACE,wBACA,wBACA,qBACH,cACP,mBACK,eACJ,iBACE,gBACD,0BACU,oBACN,sBACE,sBACA,wBACE,yBACC,2BACE,yBACF,yBACA,sBACH,mBACH,mBACA,kBACD,qBACG,cACP,iBACG,eACF,mBACI,gBACH,mBACG,gBACH,uBACO,mBACJ,uBACI,uBACA,oBACH,mBACD,cACL,cACA,cACA,oBACM,gBACJ,aACH,mBACM,mBACA,qBACE,gBACL,oBACI,kBACF,kBACA,gBACF,gBACA,iBACC,mBACE,mBACA,cACL,qBACO,mBACF,aACN,cACC,iBACG,gBACD,mBACG,gBACH,mBACG,eACJ,eACA,oBACK,gBACJ,qBACK,UC/ITC,OAEE,wDACM,oBAAqB,qCACvBC,UAEJC,SAASD,EAAK,GAAI,IAClBC,SAASD,EAAK,GAAI,IAClBC,SAASD,EAAK,GAAI,WAKlB,mCACM,UAAW,2BACbA,UAEJC,SAASD,EAAK,GAAI,IAClBC,SAASD,EAAK,GAAI,IAClBC,SAASD,EAAK,GAAI,WAKlB,mCACM,OAAQ,wBACVA,UAEJC,SAASD,EAAK,GAAKA,EAAK,GAAI,IAC5BC,SAASD,EAAK,GAAKA,EAAK,GAAI,IAC5BC,SAASD,EAAK,GAAKA,EAAK,GAAI,oqBCrB9BE,wBACQC,6GACNC,EAAcD,UACbE,IAAK,EAGmB,iBAAhBD,GAKiB,MAA1BA,EAAYE,OAAO,OACPF,EAAYG,OAAO,EAAG,MAGxBH,EAAYI,QAAQ,KAAM,IAAIC,cAIxCC,OAAOC,UAAUC,eAAeC,KAAKf,EAAaM,OAClBN,EAA9BM,QAKD,IAAIU,EAAI,EAAGA,EAAIf,EAAUgB,OAAQD,GAAK,EAAG,KACtCE,EAAMjB,EAAUe,GAChBd,EAAOgB,EAAIC,GAAGC,KAAKd,MACrBJ,EAAM,OACoBgB,EAAIG,QAAQnB,iBAAjCoB,YAAQC,YAAQC,YAClBjB,IAAK,GAKVkB,KAAKH,EAAI,GAAKI,OAAOC,MAAMF,KAAKH,SAAiBM,IAAXH,KAAKH,OACxCA,EAAI,EACAG,KAAKH,EAAI,WACbA,EAAI,KAEPG,KAAKF,EAAI,GAAKG,OAAOC,MAAMF,KAAKF,SAAiBK,IAAXH,KAAKF,OACxCA,EAAI,EACAE,KAAKF,EAAI,WACbA,EAAI,KAEPE,KAAKD,EAAI,GAAKE,OAAOC,MAAMF,KAAKD,SAAiBI,IAAXH,KAAKD,OACxCA,EAAI,EACAC,KAAKD,EAAI,WACbA,EAAI,yDAKJC,KAAKlB,8CAIEkB,KAAKH,OAAMG,KAAKF,OAAME,KAAKD,wCAIrCF,EAAIG,KAAKH,EAAEO,SAAS,IACpBN,EAAIE,KAAKF,EAAEM,SAAS,IACpBL,EAAIC,KAAKD,EAAEK,SAAS,WACP,IAAbP,EAAEL,SAAcK,MAAQA,GACX,IAAbC,EAAEN,SAAcM,MAAQA,GACX,IAAbC,EAAEP,SAAcO,MAAQA,OACjBF,EAAIC,EAAIC,4CAIVF,EAAGG,KAAKH,EAAGC,EAAGE,KAAKF,EAAGC,EAAGC,KAAKD,mBAI3C,SAAiCnB,UACxB,IAAID,EAASC"}